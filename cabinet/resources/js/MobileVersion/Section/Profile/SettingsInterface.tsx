import React, { useState } from 'react';

interface PersonalInfo {
    name: string;
    username: string;
    bio: string;
    email: string;
}

interface SettingsInterfaceProps {
    onBack?: () => void;
}

const SettingsInterface: React.FC<SettingsInterfaceProps> = ({ onBack }) => {
    const [personalInfo, setPersonalInfo] = useState<PersonalInfo>({
        name: '',
        username: '',
        bio: '',
        email: ''
    });
    const [isPersonalInfoModalOpen, setIsPersonalInfoModalOpen] = useState(false);
    const [isThemeModalOpen, setIsThemeModalOpen] = useState(false);
    const [isPrivateAccount, setIsPrivateAccount] = useState(false);
    const [isPushNotificationsEnabled, setIsPushNotificationsEnabled] = useState(true);
    const [isEmailNotificationsEnabled, setIsEmailNotificationsEnabled] = useState(false);

    const handlePersonalInfoSave = () => {
        // –õ–æ–≥—ñ–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
        setIsPersonalInfoModalOpen(false);
    };

    const handleLogout = () => {
        // –õ–æ–≥—ñ–∫–∞ –≤–∏—Ö–æ–¥—É
        console.log('Logging out...');
    };

    return (
        <div className="settings-container">
            {/* Header */}
            <div className="settings-header">
                <button className="back-button" onClick={onBack}>‚Üê</button>
                <h2>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2>
                <div style={{ width: '24px' }} />
            </div>

            {/* Profile Section */}
            <div className="profile-section">
                <div className="profile-avatar">
                    <div className="camera-icon">üì∑</div>
                </div>
                <h3>@username</h3>
                <button className="edit-profile-btn">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</button>
            </div>

            {/* Account Section */}
            <div className="settings-section">
                <div className="section-title">–û–ë–õ–Ü–ö–û–í–ò–ô –ó–ê–ü–ò–°</div>

                <div className="setting-item" onClick={() => setIsPersonalInfoModalOpen(true)}>
                    <div className="setting-left">
                        <div className="setting-icon">üë§</div>
                        <div className="setting-info">
                            <div className="setting-name">–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</div>
                            <div className="setting-description">–Ü–º'—è, –±—ñ–æ–≥—Ä–∞—Ñ—ñ—è, email</div>
                        </div>
                    </div>
                    <div className="setting-value">‚Üí</div>
                </div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üîí</div>
                        <div className="setting-info">
                            <div className="setting-name">–ü–∞—Ä–æ–ª—å —ñ –±–µ–∑–ø–µ–∫–∞</div>
                            <div className="setting-description">–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å, –¥–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è</div>
                        </div>
                    </div>
                    <div className="setting-value">‚Üí</div>
                </div>
            </div>

            {/* Privacy Section */}
            <div className="settings-section">
                <div className="section-title">–ü–†–ò–í–ê–¢–ù–Ü–°–¢–¨</div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üëÅÔ∏è</div>
                        <div className="setting-info">
                            <div className="setting-name">–ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∞–∫–∞—É–Ω—Ç</div>
                            <div className="setting-description">–¢—ñ–ª—å–∫–∏ —Å—Ö–≤–∞–ª–µ–Ω—ñ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∏ –º–æ–∂—É—Ç—å –±–∞—á–∏—Ç–∏ –≤–∞—à—ñ –ø–æ—Å—Ç–∏</div>
                        </div>
                    </div>
                    <div 
                        className={`toggle-switch ${isPrivateAccount ? 'active' : ''}`}
                        onClick={() => setIsPrivateAccount(!isPrivateAccount)}
                    />
                </div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üí¨</div>
                        <div className="setting-info">
                            <div className="setting-name">–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ</div>
                            <div className="setting-description">–ö–µ—Ä—É–≤–∞—Ç–∏ —Ç–∏–º, —Ö—Ç–æ –º–æ–∂–µ –∫–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏</div>
                        </div>
                    </div>
                    <div className="setting-value">–£—Å—ñ ‚Üí</div>
                </div>
            </div>

            {/* Notifications Section */}
            <div className="settings-section">
                <div className="section-title">–°–ü–û–í–Ü–©–ï–ù–ù–Ø</div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üîî</div>
                        <div className="setting-info">
                            <div className="setting-name">Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</div>
                            <div className="setting-description">–õ–∞–π–∫–∏, –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ, –Ω–æ–≤—ñ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∏</div>
                        </div>
                    </div>
                    <div 
                        className={`toggle-switch ${isPushNotificationsEnabled ? 'active' : ''}`}
                        onClick={() => setIsPushNotificationsEnabled(!isPushNotificationsEnabled)}
                    />
                </div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üìß</div>
                        <div className="setting-info">
                            <div className="setting-name">Email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</div>
                            <div className="setting-description">–í–∞–∂–ª–∏–≤—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</div>
                        </div>
                    </div>
                    <div 
                        className={`toggle-switch ${isEmailNotificationsEnabled ? 'active' : ''}`}
                        onClick={() => setIsEmailNotificationsEnabled(!isEmailNotificationsEnabled)}
                    />
                </div>
            </div>

            {/* Appearance Section */}
            <div className="settings-section">
                <div className="section-title">–í–ò–ì–õ–Ø–î</div>

                <div className="setting-item" onClick={() => setIsThemeModalOpen(true)}>
                    <div className="setting-left">
                        <div className="setting-icon">üåô</div>
                        <div className="setting-info">
                            <div className="setting-name">–¢–µ–º–∞</div>
                            <div className="setting-description">–¢–µ–º–Ω–∞</div>
                        </div>
                    </div>
                    <div className="setting-value">‚Üí</div>
                </div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">üåê</div>
                        <div className="setting-info">
                            <div className="setting-name">–ú–æ–≤–∞</div>
                            <div className="setting-description">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</div>
                        </div>
                    </div>
                    <div className="setting-value">‚Üí</div>
                </div>
            </div>

            {/* Other Section */}
            <div className="settings-section">
                <div className="section-title">–Ü–ù–®–ï</div>

                <div className="setting-item">
                    <div className="setting-left">
                        <div className="setting-icon">‚ùì</div>
                        <div className="setting-info">
                            <div className="setting-name">–î–æ–ø–æ–º–æ–≥–∞</div>
                            <div className="setting-description">–¶–µ–Ω—Ç—Ä –ø—ñ–¥—Ç—Ä–∏–º–∫–∏, —É–º–æ–≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</div>
                        </div>
                    </div>
                    <div className="setting-value">‚Üí</div>
                </div>

                <div className="setting-item logout" onClick={handleLogout}>
                    <div className="setting-left">
                        <div className="setting-icon">üö™</div>
                        <div className="setting-info">
                            <div className="setting-name">–í–∏–π—Ç–∏</div>
                        </div>
                    </div>
                </div>
            </div>

            {/* Personal Info Modal */}
            {isPersonalInfoModalOpen && (
                <div className="modal">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h3>–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>
                            <button 
                                className="close-button"
                                onClick={() => setIsPersonalInfoModalOpen(false)}
                            >
                                ‚úï
                            </button>
                        </div>
                        <div className="form-group">
                            <label>–Ü–º'—è</label>
                            <input
                                type="text"
                                value={personalInfo.name}
                                onChange={(e) => setPersonalInfo({
                                    ...personalInfo,
                                    name: e.target.value
                                })}
                            />
                        </div>
                        <div className="form-group">
                            <label>–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</label>
                            <input
                                type="text"
                                value={personalInfo.username}
                                onChange={(e) => setPersonalInfo({
                                    ...personalInfo,
                                    username: e.target.value
                                })}
                            />
                        </div>
                        <div className="form-group">
                            <label>–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è</label>
                            <textarea
                                value={personalInfo.bio}
                                onChange={(e) => setPersonalInfo({
                                    ...personalInfo,
                                    bio: e.target.value
                                })}
                            />
                        </div>
                        <div className="form-group">
                            <label>Email</label>
                            <input
                                type="email"
                                value={personalInfo.email}
                                onChange={(e) => setPersonalInfo({
                                    ...personalInfo,
                                    email: e.target.value
                                })}
                            />
                        </div>
                        <button 
                            className="save-button"
                            onClick={handlePersonalInfoSave}
                        >
                            –ó–±–µ—Ä–µ–≥—Ç–∏
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
};

export default SettingsInterface;