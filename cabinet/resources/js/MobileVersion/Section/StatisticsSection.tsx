// components/StatisticsSection.tsx
import { useState } from 'react';
import styles from '../styles/StatisticsSection.module.css';

interface Metric {
   title: string;
   value: string;
   change: number;
}

const StatisticsSection = () => {
   const [period, setPeriod] = useState('7');
   
   const metrics: Metric[] = [
       { title: '–ü—ñ–¥–ø–∏—Å–Ω–∏–∫–∏', value: '1,234', change: 12 },
       { title: '–ü–µ—Ä–µ–≥–ª—è–¥–∏', value: '45.2K', change: 8 },
       { title: '–õ–∞–π–∫–∏', value: '12.8K', change: -3 },
       { title: '–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ', value: '2,456', change: 15 }
   ];

   const chartData = [1.2, 1.6, 0.8, 1.8, 1.4, 0.9, 1.3];
   
   const demographics = [
       { title: '–í—ñ–∫', value: '18-24', percentage: '45%' },
       { title: '–°—Ç–∞—Ç—å', value: '–ñ—ñ–Ω.', percentage: '60%' },
       { title: '–¢–æ–ø –∫—Ä–∞—ó–Ω–∞', value: '–£–∫—Ä–∞—ó–Ω–∞', percentage: '75%' },
       { title: '–ú–æ–≤–∞', value: 'UA', percentage: '80%' }
   ];

   return (
       <div className={styles.analyticsContainer}>
           <header className={styles.header}>
               <button className={styles.backBtn}>‚Üê</button>
               <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
               <button className={styles.menuBtn}>‚ãÆ</button>
           </header>

           <div className={styles.periodFilter}>
               {['7', '28', '90', '180', '365'].map((days) => (
                   <button 
                       key={days}
                       className={`${styles.periodOption} ${period === days ? styles.active : ''}`}
                       onClick={() => setPeriod(days)}
                   >
                       {days === '365' ? '–†—ñ–∫' : 
                        days === '180' ? '6 –º—ñ—Å—è—Ü—ñ–≤' :
                        days === '90' ? '3 –º—ñ—Å—è—Ü—ñ' :
                        `${days} –¥–Ω—ñ–≤`}
                   </button>
               ))}
           </div>

           <div className={styles.metricsGrid}>
               {metrics.map((metric) => (
                   <div key={metric.title} className={styles.metricCard}>
                       <div className={styles.metricTitle}>{metric.title}</div>
                       <div className={styles.metricValue}>{metric.value}</div>
                       <div className={`${styles.metricChange} ${metric.change > 0 ? styles.positive : styles.negative}`}>
                           {metric.change > 0 ? '‚Üë' : '‚Üì'} {Math.abs(metric.change)}% –∑–∞ —Ç–∏–∂–¥–µ–Ω—å
                       </div>
                   </div>
               ))}
           </div>

           <div className={styles.chartContainer}>
               <div className={styles.chartHeader}>
                   <h3>–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑–∞ —Ç–∏–∂–¥–µ–Ω—å</h3>
                   <div className={styles.tooltip} title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤ –ø–æ –¥–Ω—è—Ö">‚ÑπÔ∏è</div>
               </div>
               <div className={styles.chartArea}>
                   {chartData.map((value, index) => (
                       <div 
                           key={index}
                           className={styles.chartBar}
                           style={{ height: `${value * 50}%` }}
                           data-value={`${value}K`}
                       />
                   ))}
               </div>
           </div>

           <div className={styles.postsTable}>
               <h3>–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –ø–æ—Å—Ç–∏</h3>
               <div className={styles.postRow}>
                   <div className={styles.postPreview}>üé¨</div>
                   <div className={styles.postInfo}>
                       <div>–í—ñ–¥–µ–æ –ø—Ä–æ –ø–æ–¥–æ—Ä–æ–∂</div>
                       <div className={styles.postStats}>
                           üëÅÔ∏è 12.5K ‚ù§Ô∏è 2.3K üí¨ 456
                       </div>
                   </div>
               </div>
           </div>

           <div className={styles.demographics}>
               <h3>–î–µ–º–æ–≥—Ä–∞—Ñ—ñ—è –∞—É–¥–∏—Ç–æ—Ä—ñ—ó</h3>
               <div className={styles.demoGrid}>
                   {demographics.map((demo) => (
                       <div key={demo.title} className={styles.demoItem}>
                           <div className={styles.demoTitle}>{demo.title}</div>
                           <div className={styles.demoValue}>{demo.value}</div>
                           <div className={styles.demoPercentage}>{demo.percentage} –∞—É–¥–∏—Ç–æ—Ä—ñ—ó</div>
                       </div>
                   ))}
               </div>
           </div>
       </div>
   );
};

export default StatisticsSection;